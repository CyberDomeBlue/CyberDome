# Python Windows System Hardening Utility
# This application is designed to be used to provide a better default posture of windows systems for the end user
# This application will edit the registry, firewall, auditing policy, logging locations, disable unnecessary services
# And attempt to provide a seamless experience for the user and when complete will display in the command prompt window
# That the system has been secured according to the standards outlined by this application
# This Application is developed by a blue teamer and is designed to provide freely and open source to the end user
# The ability to adequately secure their system to a minimum standard and reduce chances of being hacked.
# This is not a silver bullet solution and does not advertise itself as such, this is simply meant to
# get a system up to a minimum setting without constantly having to go back and manually edit the system
# Upon either purchase of a new system or upon creation of a new system image for virtual environments
#=======================================================================================================================
# ++++++++++++++++++++++++++++++++++++++++++++++++CYBER++DOME+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#=======================================================================================================================
import subprocess
import time
import os
#================




def banner():
    print("=======================================")
    print("++++++++++++++CYBER++DOME++++++++++++++")
    print("=======================================")
    time.sleep(5) 
banner() 
def runapplication():
    print("Application will now run")
    pass
runapplication()
def firewallinboundrules():
    enablehttpsin = ("netsh advfirewall firewall add rule name=enablehttpsin localport=443 dir=in  protocol=tcp action=allow")
    subprocess.call(enablehttpsin, shell=True)
    print("[*]HTTPS Inbound has been enabled")
    time.sleep(1)
    enablesshin = ("netsh advfirewall firewall add rule name=enablesshin localport=2222 dir=in protocol=tcp action=allow")
    subprocess.call(enablesshin , shell=True)
    print("[*]SSH Inbound has been enabled")
    time.sleep(1)
    disabledefaultsshin = ("netsh advfirewall firewall add rule name=disablesshdefaultin localport=22 dir=in protocol=tcp action=block")
    subprocess.call(disabledefaultsshin, shell=True)
    print("[*]SSH Default Inbound has been disabled")
    time.sleep(1)
    disabletelnetinbound = ("netsh advfirewall firewall add rule name=disabletelnetinbound localport=23 dir=in protocol=tcp action=block")
    subprocess.call(disabletelnetinbound, shell=True)
    print("[*]Telnet inbound has been disabled")
    time.sleep(1)
    disableftpinbound = ("netsh advfirewall firewall add rule name=disableftpinbound localport=21 dir=in protocol=tcp action=block")
    subprocess.call(disableftpinbound, shell=True)
    print("[*]FTP inbound has been disabled")
    time.sleep(1)
    disablemetasploitinbound = ("netsh advfirewall firewall add rule name=disablemetasploitinbound localport=4444 dir=in protocol=tcp action=block")
    subprocess.call(disablemetasploitinbound, shell=True)
    print("[*]Metasploit default port has been disabled")
    time.sleep(1)
    disablerpcinbound = ("netsh advfirewall firewall add rule name=disablerpcinbound localport=135 dir=in protocol=tcp action=block")
    subprocess.call(disablerpcinbound, shell=True)
    print("[*]RPC Inbound has been disabled")
    time.sleep(1)
    disablesmbinbound = ("netsh advfirewall firewall add rule name=disablesmbinbound localport=445 dir=in protocol=tcp action=block")
    subprocess.call(disablesmbinbound, shell=True)
    print("[*]SMB Inbound has been disabled")
    time.sleep(1)
    disableremotelogininbound = ("netsh advfirewall firewall add rule name=disablerlogininbound localport=513 dir=in protocol=tcp action=block")
    subprocess.call(disableremotelogininbound, shell=True)
    print("[*]RLOGIN Inbound has been disabled")
    time.sleep(1)
    disableBagleHinbound = ("netsh advfirewall firewall add rule name=disableBagle.Hinbound localport=2745 dir=in protocol=tcp action=block")
    subprocess.call(disableBagleHinbound, shell=True)
    print("[*]Bagle.H Inbound has been disabled")
    time.sleep(1)
    disableMyDoominbound = ("netsh advfirewall firewall add rule name=disableMyDoominbound localport=3127 dir=in protocol=tcp action=block")
    subprocess.call(disableMyDoominbound, shell=True)
    print("[*]MyDoom Inbound has been disabled")
    time.sleep(1)
    disableblasterinbound = ("netsh advfirewall firewall add rule name=disableblasterinbound localport=4444 dir=in protocol=tcp action=block")
    subprocess.call(disableblasterinbound, shell=True)
    print("[*]Blaster Inbound has been disabled")
    time.sleep(1)
    disablesasserinbound = ("netsh advfirewall firewall add rule name=disablesasserinbound localport=5554 dir=in protocol=tcp action=block")
    subprocess.call(disablesasserinbound, shell=True)
    print("[*]Sasser Inbound has been disabled")
    time.sleep(1)
    disableBaglebinbound = ("netsh advfirewall firewall add rule name=disableBagle.binbound localport=8866 dir=in protocol=tcp action=block")
    subprocess.call(disableBaglebinbound, shell=True)
    print("[*]Bagle.b Inbound has been disabled")
    time.sleep(1)
    disableDabberinbound = ("netsh advfirewall firewall add rule name=disableDabberinbound localport=9898 dir=in protocol=tcp action= block")
    subprocess.call(disableDabberinbound, shell=True)
    print("[*]Dabber inbound has been disabled")
    time.sleep(1)
    disableRbotSpybotinbound = ("netsh advfirewall firewall add rule name=disableRbot/Spybotinbound localport=9988 dir=in protocol=tcp action=block")
    subprocess.call(disableRbotSpybotinbound, shell=True)
    print("[*]Rbot/Spybot inbound has been disabled")
    time.sleep(1)
    disableNetBusinbound = ("netsh advfirewall firewall add rule name=disableNetBusinbound localport=12345 dir=in protocol=tcp action= block")
    subprocess.call(disableNetBusinbound, shell=True)
    print("[*]NetBus Inbound has been disabled")
    time.sleep(1)
    disableSub7inbound = ("netsh advfirewall firewall add rule name=disableSub7inbound localport= 27374 dir=in protocol=tcp action=block")
    subprocess.call(disableSub7inbound, shell=True)
    print("[*]Sub7 Inbound has been disabled")
    time.sleep(1)
    disableBackOrificeinbound = ("netsh advfirewall firewall add rule name=disableBackOrificeinbound localport=31337 dir=in protocol=tcp action=block")
    subprocess.call(disableBackOrificeinbound, shell=True)
    print("[*]Back Orifice Inbound has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet1inbound = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet1inbound localport=any remoteip=175.45.176.0/24 dir=in protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet1inbound, shell=True)
    print("[*]First North Korean Subnet Has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet2inbound = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet2inbound localport=any remoteip=175.45.177.0/24 dir=in protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet2inbound, shell=True)
    print("[*]Second North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet3inbound = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet3inbound localport=any remoteip=175.45.178.0/24 dir=in protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet3inbound, shell=True)
    print("[*]Third North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet4inbound = ("netsh advfirewall firewall add rule name=blacklistnorthkroeansubnet4inbound localport=any remoteip=175.45.179.0/24 dir=in protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet4inbound, shell=True)
    print("[*]Fourth North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet1inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet1inbound localport=any remoteip=37.9.0.0/20 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet1inbound, shell=True)
    print("[*]First Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet2inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet2inbound localport=any remoteip=37.9.16.0/20 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet2inbound, shell=True)
    print("[*]Second Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet3inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet3inbound localport=any remoteip=37.9.48.0/21 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet3inbound, shell=True)
    print("[*]Third Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet4inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet4inbound localport=any remoteip=37.9.64.0/18 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet4inbound, shell=True)
    print("[*]Fourth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet5inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet5inbound localport=any remoteip=37.9.128.0/21 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet5inbound, shell=True) 
    print("[*]Fifth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet6inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet6inbound localport=any remoteip=37.9.144.0/20 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet6inbound, shell=True)
    print("[*]Sixth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet7inbound = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet6inbbound localport=any remoteip=37.9.240/21 dir=in protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet7inbound, shell=True)
    print("[*]Seventh Russian Subnet has been disabled")
    time.sleep(1)
    blacklistiransubnet1inbound = ("netsh advfirewall firewall add rule name=blacklistiransubnet1inbound localport=any remoteip=37.9.248.0/21 dir=in protocol=tcp action=block")
    subprocess.call(blacklistiransubnet1inbound, shell=True)
    print("[*]First Iran Subnet has been disabled")
    time.sleep(1)    
    print("[*]End of Firewall Inbound Rules") 
firewallinboundrules()
def firewalllogging():
    firewallloggingpath = ("netsh advfirewall set allprofiles logging filename %systemroot%\system32\LogFiles\Firewall\pfirewall.log")
    subprocess.call(firewallloggingpath, shell=True)
    print("[*]Firewall Logging Path has been specified")
    enablefirewallloggingforallowedconnections = ("netsh advfirewall set allprofiles logging allowedconnetions enable")
    subprocess.call(enablefirewallloggingforallowedconnections, shell=True)
    print("[*]Firewall Logging for Allowed Connections has been enabled")
    time.sleep(1)
    enablefirewallloggingforallblockedconnections = ("netsh advfirewall set allprofiles logging droppedconnections enable")
    subprocess.call(enablefirewallloggingforallblockedconnections, shell=True)
    print("[*}Firewall Logging for Dropped Connections has been enabled")
    time.sleep(1)
firewalllogging()
def firewallbehavior():
    firewallbehavior = ("netsh advfirewall set allprofile firewallpolicy blockinbound,blockoutbound")
    subprocess.call(firewallbehavior, shell=True)
    print("[*]Firewall Behavior is now defined")
    time.sleep(2)
firewallbehavior() 
def firewalloutboundrules():
    enablehttpsout = ("netsh advfirewall firewall add rule name=enablehttpsout localport=443 dir=out protocol=tcp action=allow")
    subprocess.call(enablehttpsout, shell=True)
    print("[*]HTTPS out has been enabled")
    time.sleep(1)
    enablesshout = ("netsh advfirewall firewall add rule name=enablesshout localport=2222 dir=out protocol=tcp action=allow")
    subprocess.call(enablesshout , shell=True)
    print("[*]SSH out has been enabled")
    time.sleep(1)
    disabledefaultsshout = ("netsh advfirewall firewall add rule name=disablesshdefaultout localport=22 dir=out protocol=tcp action=block")
    subprocess.call(disabledefaultsshout, shell=True)
    print("[*]SSH Default out has been disabled")
    time.sleep(1)
    disabletelnetoutbound = ("netsh advfirewall firewall add rule name=disabletelnetout localport=23 dir=out protocol=tcp action=block")
    subprocess.call(disabletelnetoutbound, shell=True)
    print("[*]Telnet out has been disabled")
    time.sleep(1)
    disableftpout = ("netsh advfirewall firewall add rule name=disableftpout localport=21 dir=out protocol=tcp action=block")
    subprocess.call(disableftpout, shell=True)
    print("[*]FTP out has been disabled")
    time.sleep(1)
    disablemetasploitout = ("netsh advfirewall firewall add rule name=disablemetasploitout localport=4444 dir=out protocol=tcp action=block")
    subprocess.call(disablemetasploitout, shell=True)
    print("[*]Metasploit default port has been disabled")
    time.sleep(1)
    disablerpcout = ("netsh advfirewall firewall add rule name=disablerpcout localport=135 dir=out protocol=tcp action=block")
    subprocess.call(disablerpcout, shell=True)
    print("[*]RPC out has been disabled")
    time.sleep(1)
    disablesmbout = ("netsh advfirewall firewall add rule name=disablesmbout localport=445 dir=out protocol=tcp action=block")
    subprocess.call(disablesmbout, shell=True)
    print("[*]SMB out has been disabled")
    time.sleep(1) 
    disableremoteloginout = ("netsh advfirewall firewall add rule name=disablerloginout localport=513 dir=out protocol=tcp action= block")
    subprocess.call(disableremoteloginout, shell=True)
    print("[*]RLOGIN out has been disabled")
    time.sleep(1)
    disableBagleHout = ("netsh advfirewall firewall add rule name=disableBagle.Hout localport=2745 dir=out protocol=tcp action=block")
    subprocess.call(disableBagleHout, shell=True)
    print("[*]Bagle.H out has been disabled")
    time.sleep(1)
    disableMyDoomout = ("netsh advfirewall firewall add rule name=disableMyDoomout localport=3127 dir=out protocol=tcp action=block")
    subprocess.call(disableMyDoomout, shell=True)
    print("[*]MyDoom out has been disabled")
    time.sleep(1)
    disableblasterout = ("netsh advfirewall firewall add rule name=disableblasterout localport=4444 dir=out protocol=tcp action=block")
    subprocess.call(disableblasterout, shell=True)
    print("[*]Blaster out has been disabled")
    time.sleep(1)
    disablesasserout = ("netsh advfirewall firewall add rule name=disablesasserout localport=5554 dir=out protocol=tcp action=block")
    subprocess.call(disablesasserout, shell=True)
    print("[*]Sasser out has been disabled")
    time.sleep(1)
    disableBaglebout = ("netsh advfirewall firewall add rule name=disableBagle.bout localport=8866 dir=out protocol=tcp action=block")
    subprocess.call(disableBaglebout, shell=True)
    print("[*]Bagle.b out has been disabled")
    time.sleep(1)
    disableDabberout = ("netsh advfirewall firewall add rule name=disableDabberout localport=9898 dir=out protocol=tcp action=block")
    subprocess.call(disableDabberout, shell=True)
    print("[*]Dabber out has been disabled")
    time.sleep(1)
    disableRbotSpybotout = ("netsh advfirewall firewall add rule name=disableRbot/Spybotout localport=9988 dir=out protocol=tcp action=block")
    subprocess.call(disableRbotSpybotout, shell=True)
    print("[*]Rbot/Spybot out has been disabled")
    time.sleep(1)
    disableNetBusout = ("netsh advfirewall firewall add rule name=disableNetBusout localport=12345 dir=out protocol=tcp action=block")
    subprocess.call(disableNetBusout, shell=True)
    print("[*]NetBus out has been disabled")
    time.sleep(1)
    disableSub7out = ("netsh advfirewall firewall add rule name=disableSub7out localport=27374 dir=out protocol=tcp action=block")
    subprocess.call(disableSub7out, shell=True)
    print("[*]Sub7 out has been disabled")
    time.sleep(1)
    disableBackOrificeout = ("netsh advfirewall firewall add rule name=disableBackOrificeout localport=31337 dir=out protocol=tcp action=block")
    subprocess.call(disableBackOrificeout, shell=True)
    print("[*]Back Orifice out has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet1out = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet1out localport=any remoteip=175.45.176.0/24 dir=out protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet1out, shell=True)
    print("[*]First North Korean Subnet Has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet2out = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet2out localport=any remoteip=175.45.177.0/24 dir=out protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet2out, shell=True)
    print("[*]Second North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet3out = ("netsh advfirewall firewall add rule name=blacklistnorthkoreansubnet3out localport=any remoteip=175.45.178.0/24 dir=out protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet3out, shell=True)
    print("[*]Third North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistnorthkoreansubnet4out = ("netsh advfirewall firewall add rule name=blacklistnorthkroeansubnet4out localport=any remoteip=175.45.179.0/24 dir=out protocol=tcp action=block")
    subprocess.call(blacklistnorthkoreansubnet4out, shell=True)
    print("[*]Fourth North Korean Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet1out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet1out localport=any remoteip=37.9.0.0/20 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet1out, shell=True)
    print("[*]First Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet2out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet2out localport=any remoteip=37.9.16.0/20 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet2out, shell=True)
    print("[*]Second Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet3out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet3out localport=any remoteip=37.9.48.0/21 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet3out, shell=True)
    print("[*]Third Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet4out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet4out localport=any remoteip=37.9.64.0/18 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet4out, shell=True)
    print("[*]Fourth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet5out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet5out localport=any remoteip=37.9.128.0/21 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet5out, shell=True)
    print("[*]Fifth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet6out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet6out localport=any remoteip=37.9.144.0/20 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet6out, shell=True)
    print("[*]Sixth Russian Subnet has been disabled")
    time.sleep(1)
    blacklistrussiansubnet7out = ("netsh advfirewall firewall add rule name=blacklistrussiansubnet6out localport=any remoteip=37.9.240/21 dir=out protocol=tcp action=block")
    subprocess.call(blacklistrussiansubnet7out, shell=True)
    print("[*]Seventh Russian Subnet has been disabled")
    time.sleep(1)
    blacklistiransubnet1out = ("netsh advfirewall firewall add rule name=blacklistiransubnet1out localport=any remoteip=37.9.248.0/21 dir=out protocol=tcp action=block")
    subprocess.call(blacklistiransubnet1out, shell=True)
    print("[*]First Iran Subnet has been disabled")
    time.sleep(1)   
    print("[*]End of Firewall OutBound Rules")
firewalloutboundrules()
def registrykeys():
    disablerdpregkey = ('reg add "HKLM\SYSTEM\CurrentControlSet\Control\TerminalServer" /f /v fDenyTSConnections /t REG_DWORD /d 1')
    subprocess.call(disablerdpregkey, shell=True)
    print("[*]RDP Registry Key has been disabled")
    time.sleep(1)
    disableanonymousaccess = ('reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa /v restrictanonymoussam /t REG_DWORD /d 1 /f')
    subprocess.call(disableanonymousaccess, shell=True)
    print("[*]Anonymous Access Registry Key has been disabled")
    time.sleep(1)
    disablestickykeysregkey = ('reg add "HKCU\ControlPanel\Accessibility\ToggleKeys" /v Flags /t REG_SZ /d 506 /f')
    subprocess.call(disablestickykeysregkey, shell=True)
    print("[*]Sticky Keys Registry key has been disabled")
    time.sleep(1)
    disablepashthehashregistrykey = ('reg add HKLM\SYSTEM\CurrentControlSet\Control\Lsa /f /v NoLMHash /t REG_DWORD /d 1')
    subprocess.call(disablepashthehashregistrykey, shell=True)
    print("[*]Pass the Hash Attack registry key has been removed")
    time.sleep(1)
    disablerunonceregistrykey = ('reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v DisableLocalMachineRunOnce /t REG_DWORD /d 1')
    subprocess.call(disablerunonceregistrykey, shell=True)
    print("[*]Run Once Registry Key has been disabled")
    time.sleep(1)
    enableuacregkey = ('reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v EnableLUA /t REG_DWORD /d 1 /f')
    subprocess.call(enableuacregkey, shell=True)
    print("[*]UAC Registry Key has been enabled")
    time.sleep(1)
registrykeys()
def windowshashcollector():
    windowsdefendersha1hash = ('certutil -hashfile "C:\\Program Files\\Windows Defender\\MSASCui.exe" SHA1')
    subprocess.call(windowsdefendersha1hash, shell=True)
    print("[*]Windows Defender SHA1 Hash now generated")
    time.sleep(1)
    internetexplorersha1hash = ('certutil -hashfile "C:\\Program Files\\Internet Explorer\\iexplore.exe" SHA1')
    subprocess.call(internetexplorersha1hash, shell=True)
    print("[*]Internet Explorer SHA1 Hash now generated")
    time.sleep(1)
    notepadsha1hash = ('certutil -hashfile "C:\\Windows\\System32\\notepad.exe" SHA1')
    subprocess.call(notepadsha1hash, shell=True)
    print("[*]Notepad SHA1 Hash now generated")
    time.sleep(1)
    svchostsha1hash = ('certutil -hashfile "C:\\Windows\\System32\\svchost.exe" SHA1')
    subprocess.call(svchostsha1hash, shell=True)
    print("[*]SVCHOST SHA1 Hash now generated")
    time.sleep(1)
    lsasssha1hash = ('certutil -hashfile "C:\\Windows\\System32\\lsass.exe" SHA1')
    subprocess.call(lsasssha1hash, shell=True)
    print("[*]LSASS SHA1 Hash now generated")
    time.sleep(1) 
    conhostsha1hash = ('certutil -hashfile "C:\\Windows\\System32\\conhost.exe" SHA1')
    subprocess.call(conhostsha1hash, shell=True)
    print("[*]CONHOST SHA1 Hash now generated")
    time.sleep(1)
    powershellsha1hash = ('certutil -hashfile "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe" SHA1')
    subprocess.call(powershellsha1hash, shell=True)
    print("[*]Powershell SHA1 Hash now generated")
    time.sleep(1)
    spoolsvsha1hash = ('certutil -hashfile "C:\\Windows\\System32\\spoolsv.exe" SHA1')
    subprocess.call(spoolsvsha1hash, shell=True)
    print("[*]Spoolsv SHA1 Hash now generated")
    time.sleep(1)
    print("[*]Hash Collecting Function is now complete, The application will halt for 15 seconds to allow time to copy hashes")
    time.sleep(15) 
windowshashcollector()
def createadminaccount():
    newsystemadmin = ("net user System_Administrator Hg579@s$/!5nt@lway5Fun93@c4 /add")
    subprocess.call(newsystemadmin, shell=True)
    print("[*]Admin Account has been created")
    print
    print
    print("[*]New Admin Password is Please Copy somewhere safe :Hg579@s$/!5nt@lway5Fun93@c4")
    time.sleep(25)
    administrativerights = ('net localgroup "Administrators" System_Administrator /add')
    subprocess.call(administrativerights, shell=True)
    print("[*]Admin Rights assigned to new Admin Account")
    time.sleep(1)
createadminaccount()
def whitelist():
    whitelistgooglein = ("netsh advfirewall firewall add rule name=WhiteListGoogle remoteip=172.217.3.228 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistgooglein, shell=True)
    print("[*]Google Has now been whitelisted")
    time.sleep(1)
    whitelistgoogleurlout = ("netsh advfirewall firewall add rule name=WhiteListGoogle remoteip=172.217.3.228 protocol=tcp localport=443 dir=out action=allow")
    subprocess.call(whitelistgoogleurlout, shell=True)
    print("[*]Google Has now been whitelisted")
    whitelistsnortin = ("netsh advfirewall firewall add rule name=WhiteListSnort remoteip=104.16.62.75 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistsnortin, shell=True)
    print("[*]Snort Has now been whitelisted")
    whitelistsnortout = ("netsh advfirewall firewall add rule name=WhiteListSnort remoteip=104.16.62.75 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistsnortout, shell=True)
    whitelistciscoin = ("netsh advfirewall firewall add rule name=WhitelistCisco remoteip=72.163.4.185 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistciscoin, shell=True)
    print("[*]Cisco Has now been whitelisted")
    whitelistciscoout = ("netsh advfirewall firewall add rule name=WhitelistCisco remoteip=72.163.4.185 protocol=tcp localport=443 dir=out action=allow")
    subprocess.call(whitelistciscoout, shell=True)
    print("[*]Cisco has now been whitelisted")
    whitelistgooglednsin = ("netsh advfirewall firewall add rule name=whitelistgoogledns remoteip=8.8.8.8 protocol=tcp localport=53 dir=in action=allow")
    subprocess.call(whitelistgooglednsin, shell=True)
    whitelistgooglednsout = ("netsh advfirewall firewall add rule name=whitelistgoogledns remoteip=8.8.8.8 protocol=tcp localport=53 dir=out action=allow")
    subprocess.call(whitelistgooglednsout, shell=True)
    print("[*]Google DNS has now been whitelisted")
    whitelistimmunetin = ("netsh advfirewall firewall add rule name=whitelistimmunet remoteip=54.88.208.235 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistimmunetin, shell=True)
    whitelistimmunetout = ("netsh advfirewall firewall add rule name=whitelistimmunet remoteip=54.88.208.235 protocol=tcp localport=443 dir=out action=allow")
    print("[*]Immunet has now been whitelisted")
    whitelistbitdefenderin = ("netsh advfirewall firewall add rule name=whitelistbitdefender remoteip=104.20.6.54 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistbitdefenderin, shell=True)
    whitelistbitdefenderout = ("netsh advfirewall firewall add rule name=whitelistbitdefender remoteip=104.20.6.54 protocol=tcp localport=443 dir=out action=allow")
    subprocess.call(whitelistbitdefenderout, shell=True)
    print("[*]Bitdefender has now been whitelisted")
    whitelistvirtualboxin = ("netsh advfirewall firewall add rule name=whitelistvirtualbox remoteip=137.254.60.32 protocol=tcp localport=443 dir=in action=allow")
    subprocess.call(whitelistvirtualboxin, shell=True)
    whitelistvirtualboxout = ("netsh advfirewall firewall add rule name=whitelistvirtualbox remoteip=137.254.60.32 protocol=tcp localport=443 dir=out action=allow")
    subprocess.call(whitelistvirtualboxout, shell=True)
    print("[*]Virtualbox has now been whitelisted")
whitelist()
def systemupdate():
    weeklywindowsupdate = ('SCHTASKS /Create /SC WEEKLY /TN WeeklyUpdateCheck /TR wuapp.exe')
    subprocess.call(weeklywindowsupdate, shell=True)
    print("[*]Windows Weekly Update Configured")
    monthlywindowsupdate = ('SCHTASKS /Create /SC MONTHLY /TN MonthlyUpdateCheck /TR wuapp.exe')
    subprocess.call(monthlywindowsupdate, shell=True)
    print("[*]Monthly Windows Update Configured")
systemupdate() 
print("[*]CYBER DOME DEPLOYED")
time.sleep(15) 
    

    

    
    
    

    
